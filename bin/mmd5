#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2018 Joyent, Inc.
 * Copyright 2023 MNX Cloud, Inc.
 */

var fs = require('fs');
var path = require('path');
var url = require('url');

var bunyan = require('bunyan');
var dashdash = require('dashdash');
var vasync = require('vasync');

var manta = require('../lib');


///--- Functions

function optionsParser(name) {
    var parser = dashdash.createParser({
        options: manta.DEFAULT_CLI_OPTIONS
    });

    return (parser);
}


function ifError(err) {
    if (err) {
        console.error('mmd5: ' + err.toString());
        process.exit(1);
    }
}


/**
 * Handle command-specific options parsing and checking.
 *
 * @param {Object} opts: Required. A parsed options object.
 * @param {Object} parser: Required. A dashdash option parser.
 * @returns {Object} A possibly mutated version of the `opts` input parameter.
 */
function parseCmdOptions(opts, parser) {
    opts.parallel = 10;

    return (opts);
}


function printEntry(p, md5) {
    var _md5 = new Buffer.from(md5, 'base64');
    console.log(_md5.toString('hex') + '  ' + p);
}


function printError(p, err) {
    var msg = err ? (err.message || err) : '';
    console.error('mmd5: ' + p + ': ' + msg);
}


///--- Mainline

(function main() {
    const dirContentType = 'application/x-json-stream; type=directory';
    var hadErr = false;
    var argTypes = ['mpath'];
    var name = path.basename(process.argv[1]);
    var log = bunyan.createLogger({
        name: name,
        level: (process.env.LOG_LEVEL || 'info'),
        stream: process.stderr
    });
    var parser = optionsParser(name);
    var parseArgs = {
        name: name,
        parser: parser,
        argTypes: argTypes,
        parseCmdOptions: parseCmdOptions,
        log: log
    };
    var options = manta.parseOptions(parseArgs);

    var client = manta.createBinClient(options);
    var queue = new manta.Queue({
        limit: options.parallel,
        worker: function getMD5(p, cb) {
            client.info(p, function (err, info) {
                if (err) {
                    hadErr = true;
                    printError(p, err);
                } else if (info.hasOwnProperty('md5')) {
                    printEntry(p, info.md5);
                } else if (info.type === dirContentType) {
                    hadErr = true;
                    printError(p, p + ' is a directory');
                } else {
                    hadErr = true;
                    printError(p, 'missing MD5');
                }
                cb();
            });
        }
    });

    queue.once('end', function () {
        process.exit(hadErr ? 1 : 0);
    });

    options.paths.forEach(function (p) {
        ifError(manta.assertPath(p, true));
        queue.push(manta.path(p, true));
    });

    queue.close();
})();
