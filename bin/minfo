#!/usr/bin/env node
// -*- mode: js -*-
/*
 * Copyright 2018 Joyent, Inc.
 * Copyright 2022 MNX Cloud, Inc.
 */

var http = require('http');
var path = require('path-platform');

var bunyan = require('bunyan');
var dashdash = require('dashdash');

var manta = require('../lib');


///--- Functions

function optionsParser(name) {
    var parser = dashdash.createParser({
        options: manta.DEFAULT_CLI_OPTIONS.concat([
            {
                group: name + ' options'
            },
            {
                names: [ 'json', 'j' ],
                type: 'bool',
                help: 'JSON output. Additional fields \'status\' and \
                \'statusCode\' will be included in the output object.'
            }
        ])
    });

    return (parser);
}


function printEntry(res) {
    console.log('HTTP/%s %s %s',
                res.httpVersion,
                res.statusCode,
                http.STATUS_CODES[res.statusCode]);
    Object.keys(res.headers).forEach(function (k) {
        console.log('%s: %s', k, res.headers[k]);
    });
    console.log();
}


///--- Mainline

(function main() {
    var argTypes = ['mpath'];
    var name = path.basename(process.argv[1]);
    var log = bunyan.createLogger({
        name: name,
        level: (process.env.LOG_LEVEL || 'info'),
        stream: process.stderr
    });
    var parser = optionsParser(name);
    var parseArgs = {
        name: name,
        parser: parser,
        argTypes: argTypes,
        log: log
    };
    var options = manta.parseOptions(parseArgs);

    var client = manta.createBinClient(options);
    var i = -1;

    function get() {
        var p = options.paths[++i];
        if (!p) {
            client.close();
            return;
        }

        client.info(p, function (err, info, res) {
            if (err)
                res = info;
            if (options.json) {
                var status = 'HTTP/' + res.httpVersion + ' ' + res.statusCode +
                    ' ' + http.STATUS_CODES[res.statusCode];
                var h = Object.assign({
                    status: status,
                    statusCode: res.statusCode
                }, res.headers);
                console.log(JSON.stringify(h));
            } else {
                printEntry(res);
            }
            get();
        });
    }

    get();
})();
